Исходная Кс-грамматика
T - аксиома, ~ - обозначает стрелку, ? - пустая цепочка
T~T+|i|i(T)
P~P+i|T
A~T|P|?

Замечание: в [...] обозначается множество, в <...> обозначается замыкание.
-------- Исходная грамматика ---------------------------------------------------------------------------
Грамматика G = (N = [A, P, T], Σ = [(, ), +, i], P, T), аксиома 'T'
Множество правил P:
A~T|P|?
P~P+i|T
T~T+|i|i(T)

-- №1 -- Пополнение грамматики -------------------------------------------------------------------------
Пополненная грамматика G' = (N = [A, P, T] U [@], Σ = [(, ), +, i], P U [@~T], @), аксилма '@'
Множество правил P:
@~T
A~T|P|?
P~P+i|T
T~T+|i|i(T)

-- №1 -- Пополненая грамматика с пронумерованными правилами---------------------------------------------
Пополненная грамматика G' = (N = [A, P, T] U [@], Σ = [(, ), +, i], P U [@~T], @), аксилма '@'
Пронумерованный список правил из P:
0: @~T
1: A~T
2: A~P
3: A~?
4: P~P+i
5: P~T
6: T~T+
7: T~i
8: T~i(T)

-- №2-3 -- Вычисление First1 ---------------------------------------------------------------------------
Computation First1 function for all of the non-terminal symbols of the grammar. 
Iteration 1: First1(@) = []; First1(A) = [?]; First1(P) = []; First1(T) = [i]; 
Iteration 2: First1(@) = [i]; First1(A) = [?, i]; First1(P) = [i]; First1(T) = [i]; 
Iteration 3: First1(@) = [i]; First1(A) = [?, i]; First1(P) = [i]; First1(T) = [i]; 

Result for First1 function:
First1(@) = [i]; First1(A) = [?, i]; First1(P) = [i]; First1(T) = [i]; 

------- Follow1  -------------------------------------------------------
Computation Follow1 function for all of the non-terminal symbols of the grammar. 
Iteration 1: Follow(@) = []; Follow(A) = []; Follow(P) = [+]; Follow(T) = [), +]; 

Result for Follow1 function:
Follow1(@) = []; Follow1(A) = []; Follow1(P) = [+]; Follow1(T) = [), +]; 

-- №4a -- Вычисление начального состояния q0 ------------------------------------------------------------
q0 = <(@~•T, ?)> = [(T~•i, +), (T~•T+, +), (T~•i(T), ?), (T~•i(T), +), (T~•i, ?), (T~•T+, ?), (@~•T, ?)]


-- №4b -- Вычисление множества состояний ----------------------------------------------------------------
Изначально имеем
Множество непросмотренных (открытых) состояний O = [q0], множество просмотренных (закрытых) состояний C = []

Итерация 1: Извлекаем состояние q0 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [], множество просмотренных (закрытых) состояний C = [q0]
g(q0, () = <mu(q0, ()> = <[]> = [] (ранее не полученное состояние, добавляем в O) (пустое состояние)
g(q0, )) = <mu(q0, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q0, +) = <mu(q0, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q0, A) = <mu(q0, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q0, P) = <mu(q0, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q0, T) = <mu(q0, T)> = <[(T~T•+, +), (T~T•+, ?), (@~T•, ?)]> = [(T~T•+, +), (T~T•+, ?), (@~T•, ?)] = q1 (ранее не полученное состояние, добавляем в O)
g(q0, i) = <mu(q0, i)> = <[(T~i•, +), (T~i•(T), ?), (T~i•(T), +), (T~i•, ?)]> = [(T~i•, +), (T~i•(T), ?), (T~i•(T), +), (T~i•, ?)] = q2 (ранее не полученное состояние, добавляем в O)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q2, []], множество просмотренных (закрытых) состояний C = [q0]


Итерация 2: Извлекаем пусто состояние [] из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1, q2], множество просмотренных (закрытых) состояний C = [q0, []]
g(q-1, () = <mu(q-1, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, )) = <mu(q-1, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, +) = <mu(q-1, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, A) = <mu(q-1, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, P) = <mu(q-1, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, T) = <mu(q-1, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, i) = <mu(q-1, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q2], множество просмотренных (закрытых) состояний C = [q0, []]


Итерация 3: Извлекаем состояние q2 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1], множество просмотренных (закрытых) состояний C = [q0, q2, []]
g(q2, () = <mu(q2, ()> = <[(T~i(•T), ?), (T~i(•T), +)]> = [(T~•i(T), )), (T~•i, +), (T~•i, )), (T~i(•T), ?), (T~•T+, +), (T~•i(T), +), (T~i(•T), +), (T~•T+, ))] = q3 (ранее не полученное состояние, добавляем в O)
g(q2, )) = <mu(q2, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, +) = <mu(q2, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, A) = <mu(q2, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, P) = <mu(q2, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, T) = <mu(q2, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, i) = <mu(q2, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q3], множество просмотренных (закрытых) состояний C = [q0, q2, []]


Итерация 4: Извлекаем состояние q3 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1], множество просмотренных (закрытых) состояний C = [q0, q2, q3, []]
g(q3, () = <mu(q3, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q3, )) = <mu(q3, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q3, +) = <mu(q3, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q3, A) = <mu(q3, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q3, P) = <mu(q3, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q3, T) = <mu(q3, T)> = <[(T~T•+, +), (T~i(T•), ?), (T~T•+, )), (T~i(T•), +)]> = [(T~T•+, +), (T~i(T•), ?), (T~T•+, )), (T~i(T•), +)] = q4 (ранее не полученное состояние, добавляем в O)
g(q3, i) = <mu(q3, i)> = <[(T~i•, +), (T~i•, )), (T~i•(T), +), (T~i•(T), ))]> = [(T~i•, +), (T~i•, )), (T~i•(T), +), (T~i•(T), ))] = q5 (ранее не полученное состояние, добавляем в O)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q4, q5], множество просмотренных (закрытых) состояний C = [q0, q2, q3, []]


Итерация 5: Извлекаем состояние q5 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1, q4], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q5, []]
g(q5, () = <mu(q5, ()> = <[(T~i(•T), )), (T~i(•T), +)]> = [(T~•i(T), )), (T~•i, +), (T~•i, )), (T~•T+, +), (T~i(•T), )), (T~•i(T), +), (T~i(•T), +), (T~•T+, ))] = q6 (ранее не полученное состояние, добавляем в O)
g(q5, )) = <mu(q5, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q5, +) = <mu(q5, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q5, A) = <mu(q5, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q5, P) = <mu(q5, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q5, T) = <mu(q5, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q5, i) = <mu(q5, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q4, q6], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q5, []]


Итерация 6: Извлекаем состояние q4 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1, q6], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, []]
g(q4, () = <mu(q4, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q4, )) = <mu(q4, ))> = <[(T~i(T)•, ?), (T~i(T)•, +)]> = [(T~i(T)•, ?), (T~i(T)•, +)] = q7 (ранее не полученное состояние, добавляем в O)
g(q4, +) = <mu(q4, +)> = <[(T~T+•, )), (T~T+•, +)]> = [(T~T+•, )), (T~T+•, +)] = q8 (ранее не полученное состояние, добавляем в O)
g(q4, A) = <mu(q4, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q4, P) = <mu(q4, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q4, T) = <mu(q4, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q4, i) = <mu(q4, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q6, q7, q8], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, []]


Итерация 7: Извлекаем состояние q8 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1, q6, q7], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q8, []]
g(q8, () = <mu(q8, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, )) = <mu(q8, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, +) = <mu(q8, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, A) = <mu(q8, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, P) = <mu(q8, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, T) = <mu(q8, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, i) = <mu(q8, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q6, q7], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q8, []]


Итерация 8: Извлекаем состояние q7 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1, q6], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q7, q8, []]
g(q7, () = <mu(q7, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q7, )) = <mu(q7, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q7, +) = <mu(q7, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q7, A) = <mu(q7, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q7, P) = <mu(q7, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q7, T) = <mu(q7, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q7, i) = <mu(q7, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q6], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q7, q8, []]


Итерация 9: Извлекаем состояние q6 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q6, q7, q8, []]
g(q6, () = <mu(q6, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, )) = <mu(q6, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, +) = <mu(q6, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, A) = <mu(q6, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, P) = <mu(q6, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, T) = <mu(q6, T)> = <[(T~T•+, +), (T~i(T•), )), (T~T•+, )), (T~i(T•), +)]> = [(T~T•+, +), (T~i(T•), )), (T~T•+, )), (T~i(T•), +)] = q9 (ранее не полученное состояние, добавляем в O)
g(q6, i) = <mu(q6, i)> = <[(T~i•, +), (T~i•, )), (T~i•(T), +), (T~i•(T), ))]> = [(T~i•, +), (T~i•, )), (T~i•(T), +), (T~i•(T), ))] = q5 (ранее полученное состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q9], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q6, q7, q8, []]


Итерация 10: Извлекаем состояние q9 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q6, q7, q8, q9, []]
g(q9, () = <mu(q9, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q9, )) = <mu(q9, ))> = <[(T~i(T)•, )), (T~i(T)•, +)]> = [(T~i(T)•, )), (T~i(T)•, +)] = q10 (ранее не полученное состояние, добавляем в O)
g(q9, +) = <mu(q9, +)> = <[(T~T+•, )), (T~T+•, +)]> = [(T~T+•, )), (T~T+•, +)] = q8 (ранее полученное состояние)
g(q9, A) = <mu(q9, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q9, P) = <mu(q9, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q9, T) = <mu(q9, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q9, i) = <mu(q9, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q10], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q6, q7, q8, q9, []]


Итерация 11: Извлекаем состояние q10 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q6, q7, q8, q9, q10, []]
g(q10, () = <mu(q10, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, )) = <mu(q10, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, +) = <mu(q10, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, A) = <mu(q10, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, P) = <mu(q10, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, T) = <mu(q10, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, i) = <mu(q10, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1], множество просмотренных (закрытых) состояний C = [q0, q2, q3, q4, q5, q6, q7, q8, q9, q10, []]


Итерация 12: Извлекаем состояние q1 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, []]
g(q1, () = <mu(q1, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q1, )) = <mu(q1, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q1, +) = <mu(q1, +)> = <[(T~T+•, ?), (T~T+•, +)]> = [(T~T+•, ?), (T~T+•, +)] = q11 (ранее не полученное состояние, добавляем в O)
g(q1, A) = <mu(q1, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q1, P) = <mu(q1, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q1, T) = <mu(q1, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q1, i) = <mu(q1, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q11], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, []]


Итерация 13: Извлекаем состояние q11 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, []]
g(q11, () = <mu(q11, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, )) = <mu(q11, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, +) = <mu(q11, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, A) = <mu(q11, A)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, P) = <mu(q11, P)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, T) = <mu(q11, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, i) = <mu(q11, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, []]


Множество O пусто, заканчиваем вычисление состояний.

Список состояний:
q0 = [(T~•i, +), (T~•T+, +), (T~•i(T), ?), (T~•i(T), +), (T~•i, ?), (T~•T+, ?), (@~•T, ?)]
q1 = [(T~T•+, +), (T~T•+, ?), (@~T•, ?)]
q2 = [(T~i•, +), (T~i•(T), ?), (T~i•(T), +), (T~i•, ?)]
q3 = [(T~•i(T), )), (T~•i, +), (T~•i, )), (T~i(•T), ?), (T~•T+, +), (T~•i(T), +), (T~i(•T), +), (T~•T+, ))]
q4 = [(T~T•+, +), (T~i(T•), ?), (T~T•+, )), (T~i(T•), +)]
q5 = [(T~i•, +), (T~i•, )), (T~i•(T), +), (T~i•(T), ))]
q6 = [(T~•i(T), )), (T~•i, +), (T~•i, )), (T~•T+, +), (T~i(•T), )), (T~•i(T), +), (T~i(•T), +), (T~•T+, ))]
q7 = [(T~i(T)•, ?), (T~i(T)•, +)]
q8 = [(T~T+•, )), (T~T+•, +)]
q9 = [(T~T•+, +), (T~i(T•), )), (T~T•+, )), (T~i(T•), +)]
q10 = [(T~i(T)•, )), (T~i(T)•, +)]
q11 = [(T~T+•, ?), (T~T+•, +)]
[]

--------- Таблица для функции g -------------------------------------------------------------------------
g   |         (|         )|         +|         A|         P|         T|         i|
------------------------------------------------------------------------
  q0|        []|        []|        []|        []|        []|         1|         2|
  q1|        []|        []|        11|        []|        []|        []|        []|
  q2|         3|        []|        []|        []|        []|        []|        []|
  q3|        []|        []|        []|        []|        []|         4|         5|
  q4|        []|         7|         8|        []|        []|        []|        []|
  q5|         6|        []|        []|        []|        []|        []|        []|
  q6|        []|        []|        []|        []|        []|         9|         5|
  q7|        []|        []|        []|        []|        []|        []|        []|
  q8|        []|        []|        []|        []|        []|        []|        []|
  q9|        []|        10|         8|        []|        []|        []|        []|
 q10|        []|        []|        []|        []|        []|        []|        []|
 q11|        []|        []|        []|        []|        []|        []|        []|

-- №5 -- Проверка состояний на противоречивость (определение в документе Рябого №5) ---------------------
Тест для q0: ok
Тест для q1: ok
Тест для q2: ok
Тест для q3: ok
Тест для q4: ok
Тест для q5: ok
Тест для q6: ok
Тест для q7: ok
Тест для q8: ok
Тест для q9: ok
Тест для q10: ok
Тест для q11: ok

-- №6 -- Таблица для функции f --------------------------------------------------------------------------

f   |              (|              )|              +|              ?|              i|
------------------------------------------------------------------------
  q0|         ошибка|         ошибка|         ошибка|         ошибка|        перенос|
  q1|         ошибка|         ошибка|        перенос|         допуск|         ошибка|
  q2|        перенос|         ошибка|     свертка: 7|     свертка: 7|         ошибка|
  q3|         ошибка|         ошибка|         ошибка|         ошибка|        перенос|
  q4|         ошибка|        перенос|        перенос|         ошибка|         ошибка|
  q5|        перенос|     свертка: 7|     свертка: 7|         ошибка|         ошибка|
  q6|         ошибка|         ошибка|         ошибка|         ошибка|        перенос|
  q7|         ошибка|         ошибка|     свертка: 8|     свертка: 8|         ошибка|
  q8|         ошибка|     свертка: 6|     свертка: 6|         ошибка|         ошибка|
  q9|         ошибка|        перенос|        перенос|         ошибка|         ошибка|
 q10|         ошибка|     свертка: 8|     свертка: 8|         ошибка|         ошибка|
 q11|         ошибка|         ошибка|     свертка: 6|     свертка: 6|         ошибка|

