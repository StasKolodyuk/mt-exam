Замечание: в [...] обозначается множество, в <...> обозначается замыкание.
Tue Jan 12 23:46:05 EET 2016
-------- Исходная грамматика ---------------------------------------------------------------------------
Грамматика G = (N = [E, T], Σ = [(, ), +, i], P, E), аксиома 'E'
Множество правил P:
E~E+T|T
T~i|i(E)

-- №1 -- Пополнение грамматики -------------------------------------------------------------------------
Пополненная грамматика G' = (N = [E, T] U [@], Σ = [(, ), +, i], P U [@~E], @), аксилма '@'
Множество правил P:
@~E
E~E+T|T
T~i|i(E)

-- №1 -- Пополненая грамматика с пронумерованными правилами---------------------------------------------
Пополненная грамматика G' = (N = [E, T] U [@], Σ = [(, ), +, i], P U [@~E], @), аксилма '@'
Пронумерованный список правил из P:
0: @~E
1: E~E+T
2: E~T
3: T~i
4: T~i(E)

-- №2-3 -- Вычисление First1 ---------------------------------------------------------------------------
Computation First1 function for all of the non-terminal symbols of the grammar. 
Iteration 1: First1(@) = []; First1(E) = []; First1(T) = [i]; 
Iteration 2: First1(@) = []; First1(E) = [i]; First1(T) = [i]; 
Iteration 3: First1(@) = [i]; First1(E) = [i]; First1(T) = [i]; 
Iteration 4: First1(@) = [i]; First1(E) = [i]; First1(T) = [i]; 

Result for First1 function:
First1(@) = [i]; First1(E) = [i]; First1(T) = [i]; 

------- Follow1  -------------------------------------------------------
Computation Follow1 function for all of the non-terminal symbols of the grammar. 
Iteration 1: Follow(@) = []; Follow(E) = [), +]; Follow(T) = [), +]; 
Iteration 2: Follow(@) = []; Follow(E) = [), +]; Follow(T) = [), +]; 

Result for Follow1 function:
Follow1(@) = []; Follow1(E) = [), +]; Follow1(T) = [), +]; 

-- №4a -- Вычисление начального состояния q0 ------------------------------------------------------------
q0 = <(@~•E, ?)> = [(E~•T, ?), (T~•i(E), +), (T~•i, +), (E~•T, +), (E~•E+T, +), (T~•i(E), ?), (E~•E+T, ?), (T~•i, ?), (@~•E, ?)]


-- №4b -- Вычисление множества состояний ----------------------------------------------------------------
Изначально имеем
Множество непросмотренных (открытых) состояний O = [q0], множество просмотренных (закрытых) состояний C = []

Итерация 1: Извлекаем состояние q0 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [], множество просмотренных (закрытых) состояний C = [q0]
g(q0, () = <mu(q0, ()> = <[]> = [] (ранее не полученное состояние, добавляем в O) (пустое состояние)
g(q0, )) = <mu(q0, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q0, +) = <mu(q0, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q0, E) = <mu(q0, E)> = <[(E~E•+T, +), (E~E•+T, ?), (@~E•, ?)]> = [(E~E•+T, +), (E~E•+T, ?), (@~E•, ?)] = q1 (ранее не полученное состояние, добавляем в O)
g(q0, T) = <mu(q0, T)> = <[(E~T•, ?), (E~T•, +)]> = [(E~T•, ?), (E~T•, +)] = q2 (ранее не полученное состояние, добавляем в O)
g(q0, i) = <mu(q0, i)> = <[(T~i•, +), (T~i•(E), +), (T~i•, ?), (T~i•(E), ?)]> = [(T~i•, +), (T~i•(E), +), (T~i•, ?), (T~i•(E), ?)] = q3 (ранее не полученное состояние, добавляем в O)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q2, q3, []], множество просмотренных (закрытых) состояний C = [q0]


Итерация 2: Извлекаем пусто состояние [] из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1, q2, q3], множество просмотренных (закрытых) состояний C = [q0, []]
g(q-1, () = <mu(q-1, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, )) = <mu(q-1, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, +) = <mu(q-1, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, E) = <mu(q-1, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, T) = <mu(q-1, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q-1, i) = <mu(q-1, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q2, q3], множество просмотренных (закрытых) состояний C = [q0, []]


Итерация 3: Извлекаем состояние q2 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1, q3], множество просмотренных (закрытых) состояний C = [q0, q2, []]
g(q2, () = <mu(q2, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, )) = <mu(q2, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, +) = <mu(q2, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, E) = <mu(q2, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, T) = <mu(q2, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q2, i) = <mu(q2, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q3], множество просмотренных (закрытых) состояний C = [q0, q2, []]


Итерация 4: Извлекаем состояние q3 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q1], множество просмотренных (закрытых) состояний C = [q0, q2, q3, []]
g(q3, () = <mu(q3, ()> = <[(T~i(•E), ?), (T~i(•E), +)]> = [(T~•i(E), +), (T~•i, +), (T~•i(E), )), (T~•i, )), (E~•T, +), (E~•E+T, +), (T~i(•E), ?), (E~•T, )), (E~•E+T, )), (T~i(•E), +)] = q4 (ранее не полученное состояние, добавляем в O)
g(q3, )) = <mu(q3, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q3, +) = <mu(q3, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q3, E) = <mu(q3, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q3, T) = <mu(q3, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q3, i) = <mu(q3, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q1, q4], множество просмотренных (закрытых) состояний C = [q0, q2, q3, []]


Итерация 5: Извлекаем состояние q1 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q4], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, []]
g(q1, () = <mu(q1, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q1, )) = <mu(q1, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q1, +) = <mu(q1, +)> = <[(E~E+•T, +), (E~E+•T, ?)]> = [(T~•i(E), +), (T~•i, +), (E~E+•T, +), (T~•i(E), ?), (T~•i, ?), (E~E+•T, ?)] = q5 (ранее не полученное состояние, добавляем в O)
g(q1, E) = <mu(q1, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q1, T) = <mu(q1, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q1, i) = <mu(q1, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q4, q5], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, []]


Итерация 6: Извлекаем состояние q5 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q4], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q5, []]
g(q5, () = <mu(q5, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q5, )) = <mu(q5, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q5, +) = <mu(q5, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q5, E) = <mu(q5, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q5, T) = <mu(q5, T)> = <[(E~E+T•, +), (E~E+T•, ?)]> = [(E~E+T•, +), (E~E+T•, ?)] = q6 (ранее не полученное состояние, добавляем в O)
g(q5, i) = <mu(q5, i)> = <[(T~i•, +), (T~i•(E), +), (T~i•, ?), (T~i•(E), ?)]> = [(T~i•, +), (T~i•(E), +), (T~i•, ?), (T~i•(E), ?)] = q3 (ранее полученное состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q4, q6], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q5, []]


Итерация 7: Извлекаем состояние q6 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q4], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q5, q6, []]
g(q6, () = <mu(q6, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, )) = <mu(q6, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, +) = <mu(q6, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, E) = <mu(q6, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, T) = <mu(q6, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q6, i) = <mu(q6, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q4], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q5, q6, []]


Итерация 8: Извлекаем состояние q4 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, []]
g(q4, () = <mu(q4, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q4, )) = <mu(q4, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q4, +) = <mu(q4, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q4, E) = <mu(q4, E)> = <[(T~i(E•), +), (E~E•+T, +), (E~E•+T, )), (T~i(E•), ?)]> = [(T~i(E•), +), (E~E•+T, +), (E~E•+T, )), (T~i(E•), ?)] = q7 (ранее не полученное состояние, добавляем в O)
g(q4, T) = <mu(q4, T)> = <[(E~T•, )), (E~T•, +)]> = [(E~T•, )), (E~T•, +)] = q8 (ранее не полученное состояние, добавляем в O)
g(q4, i) = <mu(q4, i)> = <[(T~i•, +), (T~i•(E), +), (T~i•, )), (T~i•(E), ))]> = [(T~i•, +), (T~i•(E), +), (T~i•, )), (T~i•(E), ))] = q9 (ранее не полученное состояние, добавляем в O)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q7, q8, q9], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, []]


Итерация 9: Извлекаем состояние q7 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q8, q9], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, []]
g(q7, () = <mu(q7, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q7, )) = <mu(q7, ))> = <[(T~i(E)•, ?), (T~i(E)•, +)]> = [(T~i(E)•, ?), (T~i(E)•, +)] = q10 (ранее не полученное состояние, добавляем в O)
g(q7, +) = <mu(q7, +)> = <[(E~E+•T, )), (E~E+•T, +)]> = [(T~•i(E), +), (T~•i, +), (T~•i(E), )), (T~•i, )), (E~E+•T, )), (E~E+•T, +)] = q11 (ранее не полученное состояние, добавляем в O)
g(q7, E) = <mu(q7, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q7, T) = <mu(q7, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q7, i) = <mu(q7, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q8, q9, q10, q11], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, []]


Итерация 10: Извлекаем состояние q10 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q8, q9, q11], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q10, []]
g(q10, () = <mu(q10, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, )) = <mu(q10, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, +) = <mu(q10, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, E) = <mu(q10, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, T) = <mu(q10, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q10, i) = <mu(q10, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q8, q9, q11], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q10, []]


Итерация 11: Извлекаем состояние q11 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q8, q9], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q10, q11, []]
g(q11, () = <mu(q11, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, )) = <mu(q11, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, +) = <mu(q11, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, E) = <mu(q11, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q11, T) = <mu(q11, T)> = <[(E~E+T•, )), (E~E+T•, +)]> = [(E~E+T•, )), (E~E+T•, +)] = q12 (ранее не полученное состояние, добавляем в O)
g(q11, i) = <mu(q11, i)> = <[(T~i•, +), (T~i•(E), +), (T~i•, )), (T~i•(E), ))]> = [(T~i•, +), (T~i•(E), +), (T~i•, )), (T~i•(E), ))] = q9 (ранее полученное состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q8, q9, q12], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q10, q11, []]


Итерация 12: Извлекаем состояние q8 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q9, q12], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q10, q11, []]
g(q8, () = <mu(q8, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, )) = <mu(q8, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, +) = <mu(q8, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, E) = <mu(q8, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, T) = <mu(q8, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q8, i) = <mu(q8, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q9, q12], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q10, q11, []]


Итерация 13: Извлекаем состояние q9 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q12], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, []]
g(q9, () = <mu(q9, ()> = <[(T~i(•E), )), (T~i(•E), +)]> = [(T~i(•E), )), (T~•i(E), +), (T~•i, +), (T~•i(E), )), (T~•i, )), (E~•T, +), (E~•E+T, +), (E~•T, )), (E~•E+T, )), (T~i(•E), +)] = q13 (ранее не полученное состояние, добавляем в O)
g(q9, )) = <mu(q9, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q9, +) = <mu(q9, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q9, E) = <mu(q9, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q9, T) = <mu(q9, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q9, i) = <mu(q9, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q12, q13], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, []]


Итерация 14: Извлекаем состояние q13 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q12], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q13, []]
g(q13, () = <mu(q13, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q13, )) = <mu(q13, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q13, +) = <mu(q13, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q13, E) = <mu(q13, E)> = <[(T~i(E•), +), (T~i(E•), )), (E~E•+T, +), (E~E•+T, ))]> = [(T~i(E•), +), (T~i(E•), )), (E~E•+T, +), (E~E•+T, ))] = q14 (ранее не полученное состояние, добавляем в O)
g(q13, T) = <mu(q13, T)> = <[(E~T•, )), (E~T•, +)]> = [(E~T•, )), (E~T•, +)] = q8 (ранее полученное состояние)
g(q13, i) = <mu(q13, i)> = <[(T~i•, +), (T~i•(E), +), (T~i•, )), (T~i•(E), ))]> = [(T~i•, +), (T~i•(E), +), (T~i•, )), (T~i•(E), ))] = q9 (ранее полученное состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q12, q14], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q13, []]


Итерация 15: Извлекаем состояние q14 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q12], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q13, q14, []]
g(q14, () = <mu(q14, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q14, )) = <mu(q14, ))> = <[(T~i(E)•, +), (T~i(E)•, ))]> = [(T~i(E)•, +), (T~i(E)•, ))] = q15 (ранее не полученное состояние, добавляем в O)
g(q14, +) = <mu(q14, +)> = <[(E~E+•T, )), (E~E+•T, +)]> = [(T~•i(E), +), (T~•i, +), (T~•i(E), )), (T~•i, )), (E~E+•T, )), (E~E+•T, +)] = q11 (ранее полученное состояние)
g(q14, E) = <mu(q14, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q14, T) = <mu(q14, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q14, i) = <mu(q14, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q12, q15], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q13, q14, []]


Итерация 16: Извлекаем состояние q15 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [q12], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q13, q14, q15, []]
g(q15, () = <mu(q15, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q15, )) = <mu(q15, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q15, +) = <mu(q15, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q15, E) = <mu(q15, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q15, T) = <mu(q15, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q15, i) = <mu(q15, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [q12], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q13, q14, q15, []]


Итерация 17: Извлекаем состояние q12 из O и включаем в C, получаем: 
Множество непросмотренных (открытых) состояний O = [], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, []]
g(q12, () = <mu(q12, ()> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q12, )) = <mu(q12, ))> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q12, +) = <mu(q12, +)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q12, E) = <mu(q12, E)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q12, T) = <mu(q12, T)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
g(q12, i) = <mu(q12, i)> = <[]> = [] (ранее полученное состояние) (пустое состояние)
В итоге имеем:
Множество непросмотренных (открытых) состояний O = [], множество просмотренных (закрытых) состояний C = [q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, []]


Множество O пусто, заканчиваем вычисление состояний.

Список состояний:
q0 = [(E~•T, ?), (T~•i(E), +), (T~•i, +), (E~•T, +), (E~•E+T, +), (T~•i(E), ?), (E~•E+T, ?), (T~•i, ?), (@~•E, ?)]
q1 = [(E~E•+T, +), (E~E•+T, ?), (@~E•, ?)]
q2 = [(E~T•, ?), (E~T•, +)]
q3 = [(T~i•, +), (T~i•(E), +), (T~i•, ?), (T~i•(E), ?)]
q4 = [(T~•i(E), +), (T~•i, +), (T~•i(E), )), (T~•i, )), (E~•T, +), (E~•E+T, +), (T~i(•E), ?), (E~•T, )), (E~•E+T, )), (T~i(•E), +)]
q5 = [(T~•i(E), +), (T~•i, +), (E~E+•T, +), (T~•i(E), ?), (T~•i, ?), (E~E+•T, ?)]
q6 = [(E~E+T•, +), (E~E+T•, ?)]
q7 = [(T~i(E•), +), (E~E•+T, +), (E~E•+T, )), (T~i(E•), ?)]
q8 = [(E~T•, )), (E~T•, +)]
q9 = [(T~i•, +), (T~i•(E), +), (T~i•, )), (T~i•(E), ))]
q10 = [(T~i(E)•, ?), (T~i(E)•, +)]
q11 = [(T~•i(E), +), (T~•i, +), (T~•i(E), )), (T~•i, )), (E~E+•T, )), (E~E+•T, +)]
q12 = [(E~E+T•, )), (E~E+T•, +)]
q13 = [(T~i(•E), )), (T~•i(E), +), (T~•i, +), (T~•i(E), )), (T~•i, )), (E~•T, +), (E~•E+T, +), (E~•T, )), (E~•E+T, )), (T~i(•E), +)]
q14 = [(T~i(E•), +), (T~i(E•), )), (E~E•+T, +), (E~E•+T, ))]
q15 = [(T~i(E)•, +), (T~i(E)•, ))]
[]

--------- Таблица для функции g -------------------------------------------------------------------------
g   |         (|         )|         +|         E|         T|         i|
------------------------------------------------------------------------
  q0|        []|        []|        []|         1|         2|         3|
  q1|        []|        []|         5|        []|        []|        []|
  q2|        []|        []|        []|        []|        []|        []|
  q3|         4|        []|        []|        []|        []|        []|
  q4|        []|        []|        []|         7|         8|         9|
  q5|        []|        []|        []|        []|         6|         3|
  q6|        []|        []|        []|        []|        []|        []|
  q7|        []|        10|        11|        []|        []|        []|
  q8|        []|        []|        []|        []|        []|        []|
  q9|        13|        []|        []|        []|        []|        []|
 q10|        []|        []|        []|        []|        []|        []|
 q11|        []|        []|        []|        []|        12|         9|
 q12|        []|        []|        []|        []|        []|        []|
 q13|        []|        []|        []|        14|         8|         9|
 q14|        []|        15|        11|        []|        []|        []|
 q15|        []|        []|        []|        []|        []|        []|

-- №5 -- Проверка состояний на противоречивость (определение в документе Рябого №5) ---------------------
Тест для q0: ok
Тест для q1: ok
Тест для q2: ok
Тест для q3: ok
Тест для q4: ok
Тест для q5: ok
Тест для q6: ok
Тест для q7: ok
Тест для q8: ok
Тест для q9: ok
Тест для q10: ok
Тест для q11: ok
Тест для q12: ok
Тест для q13: ok
Тест для q14: ok
Тест для q15: ok

-- №6 -- Таблица для функции f --------------------------------------------------------------------------

f   |              (|              )|              +|              ?|              i|
------------------------------------------------------------------------
  q0|         ошибка|         ошибка|         ошибка|         ошибка|        перенос|
  q1|         ошибка|         ошибка|        перенос|         допуск|         ошибка|
  q2|         ошибка|         ошибка|     свертка: 2|     свертка: 2|         ошибка|
  q3|        перенос|         ошибка|     свертка: 3|     свертка: 3|         ошибка|
  q4|         ошибка|         ошибка|         ошибка|         ошибка|        перенос|
  q5|         ошибка|         ошибка|         ошибка|         ошибка|        перенос|
  q6|         ошибка|         ошибка|     свертка: 1|     свертка: 1|         ошибка|
  q7|         ошибка|        перенос|        перенос|         ошибка|         ошибка|
  q8|         ошибка|     свертка: 2|     свертка: 2|         ошибка|         ошибка|
  q9|        перенос|     свертка: 3|     свертка: 3|         ошибка|         ошибка|
 q10|         ошибка|         ошибка|     свертка: 4|     свертка: 4|         ошибка|
 q11|         ошибка|         ошибка|         ошибка|         ошибка|        перенос|
 q12|         ошибка|     свертка: 1|     свертка: 1|         ошибка|         ошибка|
 q13|         ошибка|         ошибка|         ошибка|         ошибка|        перенос|
 q14|         ошибка|        перенос|        перенос|         ошибка|         ошибка|
 q15|         ошибка|     свертка: 4|     свертка: 4|         ошибка|         ошибка|

